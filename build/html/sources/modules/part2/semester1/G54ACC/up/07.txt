.. _G53ACC07:

==========================
07 - IP Network Management
==========================

What is Network Management?
===========================

Computer networks are considered to have three operating timescales, **data** (packet forwarding in microseconds and milliseconds), **control** (flows and connections in seconds and minutes) and **management** (aggregates and networks in hours and days).

So we are concerned with *the network* rather than particular devices or protocols. With any network standardisation is the key!

ISO FCAPS: Functional Separation
********************************

FCAPS is an acronym:

* Fault - Recognise, isolate, correctness, log faults
* Configuration - collect, store, track configurations
* Accounting - collect statistics, bill users, enforce quotas
* Performance - monitor trends, set thresholds, trigger alarms
* Security - identify, secure, manage risks

TMN EMS: Administrative Separation
**********************************

An alternative to a function separation is an administrative one.

TMN EMS stands for Telecommunications Management Network Element Management System.

Network Management
******************

Models of general communication networks tend to be quite abstract and tedious. Many practitioner still seem excited about OO programming and WIMP interfaces, probably because implementation is hard due to so many excessively long complex standards.

#. What should be happening
#. What is happening
#. What shouldn't be happening?
#. What will be happening

We will be concentrating on IP networks and in this environment there are lots of acronyms such as ICMP, SNMP, MIB, RFC.

We will be talking about networks about about :math:`10^2` routers and :math:`10^5` hosts. We will be concentrating on the routers and not the hosts, and will be ignoring *service management* such as DNS, AD, file stores etc.

IP Network Components
=====================

*...*

Multiple Router Flavours
************************

**Core** routers are big, fast and expensive such as the Cisco HFR or the Juniper T-640. They use anything from OC-12 (622Mbps) up to (OC-769 which is around 50Gbps).

**Transit or Peering-facing** routers are smaller and use OC-3 and up and provide a good GigE density. These are used for ACLs, BGP, uRPF.

**Customer-facing** routers incorporate technologies for sharing services to different customers effectively and any other services. Some acronyms seen here are FR and ATM.

**Broadband aggregator** routers are designed for high scalability, using sessions, ports and reconnections.

**Customer-premises** (CPE) routers are around maybe 100Mbps. These handle NAT, DHCP, provide a firewall, maybe wireless, VoIP etc. THey are low cost, low-end, and can just be software on a PC.

Network Design
**************

ISPs, IXs, enterprises and campuses have these kinds of networks. There are many types of design such as:

* Flat
* Hierarchical
* Hybrids
* Multiple Scales

There are many constraints involved in networks:

Business
    * Backwards compatibly
    * Who can connect to your network
    * Peering (joining your network with another companies network)

Technology
    * Power - 24/7 operation requires a lot of energy and a lot of cooling and all the heat means you need a lot of space to house these devices in.
    * Port density (physically how many people can connect) vs raw bandwidth
    * Software reliability
    * Hardware and software capability

Connectivity/Resiliency
    * "All core routers connect to at least 2 other core routers"
    * "All edge routers connect to at least 2 core routers"

Router Configuration
********************

**Initialisation** - Name the router and setup the boot options and maybe any authentication options.

**Configure Interfaces** - Loopbacks, ethernet, fibre, ATM. Subnet masks, filters and static routes (fallback for BGP failure). Shutdown (or not), queueing options, full/half duplex.

**Configure routing protocols** such as OSPF, BGP, IS-IS. Process addresses to accept router from, networks to advertise on. Access lists, filters.

**Route-maps** are for matching *routes* rather than data traffic.

There are other configuration aspects such: traps, syslog.

And don't forget switch configuration is about as painful as router configuration.

You end up with lots of large, fragile text files. You may have thousands of routers and thousands of lines per config file. Errors are hard to find and have non-obvious results. Router configuration is also editable on-line cause further problems. On top of all that the order of commands matter.

So it is hard to track of all these configuration files. Some places use naming schemes, directory trees, CVS, ssh upload and atomic commits in order to manage these files. Even database have been used to manage this stuff.

The state of the art is pretty basic. There are not very many tools to check consistency or design goals. Generally people generate configurations from templates and have employ a human-intensive process to control access to running configs. This is a top of current research.

IP Network Management Protocols
===============================

ICMP
****

Internet Control Message Protocol is the the number 1 IP protocol. It supports a variety of message types such as echo and echo reply (ping), time exceeded (traceroute), destination unreachable, redirect, source quench.

Ping (Packet INternet Groper)
*****************************

Ping is a test for liveness and is also used to measure (round-trip) latency. It sends an ICMP echo and a valid IP host *must* reply with an ICMP echo response.

Traceroute
**********

In order to determine the route packets take to their destination you can send UDP packets with increasing time-to-live values. Compliant IP hosts must respond with an ICMP "time exceeded" and triggers each host along the path to respond in this way.

It is not quite that simple as one router can have many IP addresses and routes can change.

SNMP
****

A protocol to manage information tables on devices. It provides *get*, *set*, *trap* and *notify* operations.

Complexity is mostly in the MIB (management information base) design. There are some standard tables but many are vendor specific. MIBs are not critical so many end up populated incorrectly. There can be many tens of MIBs (thousands of lines each) per device, with different versions, different data and different semantics.

This provides yet another configuration tracking problem thanks to the inter-relationships between MIBs.

IPFIX
*****

*...*



Pulling it all Together
=======================

A Hypothetical NMS
******************

A Network Management System is a GUI around ICMP (so it uses ping and traceroute, SNMP etc.). It can provide many features:

* Recursive host discovery
* Broadcast ping, ARP, default gateways
* Recursive SNMP queries for known hosts/connected networks.
* Ping known hosts to test liveness
* Iterate

They can also display topology to allow people to *drill-down* to particular devices. Configuration and monitoring of known devices is also possible:

* Trap, Netflow, syslog message destinations
* Counter thresholds, CPU utilisation threshold, fault reporting
* Particular faults or fault patterns

They can also provide interface statistics and graphs (MRTG).

There are a lot of software engineering corner cases

*...*