.. _G52ACC02:

==============
02 - IP and Up
==============

*Check the module web page for extra reading material.*

IP is layer 3 of the OSI or Internet model.

Ip packets are routed hop-by-hop using store and forward packets. These packets may be buffered at each routing device.

* Overview
* Addressing
* Routing vs For
*
* Control
* Evolution
* Alternatives & Summary

Overview
========

Host have addresses.

Packets are passed to the datalink layer for transmission (commonly ethernet).

Data is encapsulated in packets.

Routers receive packets, examine them and then forward them to another device.

Encapsulation
-------------

Data comes down in chunks, these chunks may be too large or the datalink and thus packetisation is needed to put that data into suitable sized chunks.

Take a look at:
    * RFC 791 Internet Protocol
    * IEN46 Addressing and Naming
    
Addressing
==========

Host addresses in IPv4 are 32 bits long and are intended to be unique. In reality interfaces are allocated addresses.

However 32 bits is now going to be not enough addresses to give all interfaces unique addresses.

An IP address is commonly depicted in 4 parts or octets.

Dotted quad notation (msb first)::

    a.b.c.d

Address Aggregation
-------------------

There is a need to determine the *route* to the address a packet is targeted at.

Since there are :math:`2^32` it would a lot of time to decide where the packet should go by searching through a list of all addresses.

The sollution is to use hierarchical addressing.

Originally the firs 8 bits where used to define the network (originally different Universities) and the remaining 4 would specify a device on that network.

Classless Inter-Domain Routing
------------------------------

**Subnetting** uses a *netmask* to cluster addresses into more efficient (less wastfull) groups.

*CIDR, RFC 1338* introduces a *prefix* with explicit *prefix lengths*

For example::

    172.16/12 == (172.16.0.0, 255.240.0.0)
    
Routing vs Forwarding
=====================

A Router receives and IP packet, it makes a decision to drop or forward the packet. Making that decision is called **forwarding**.

Then the router has to determine which interface to forward the packet through. The information gathering process (using routing protocols) to determine which interface is the correct one is called **routing**.

Forwarding
==========

Need to map packet's destination to a port

The routing process generates a *forwarding table* consisting of the *prefix* and *port*.

Addresses are matched to prefixes via the longest prefix match. This means the most specific entry is used.

If no match is found the **default route** is used.

The table needs to be structured such that lookup latency is minimised, and also be able to handle dynamic and frequent updates.

Other Forwarding Actions
========================

As a packet is forwarded the *time-to-live* (TTL) field is decremented. If a router decrements a packets TTL to 0 it must drop the packet. This ensures that packets if stuck in an endless loop will eventually die and not just saturate the system.

IP abstracts away from differing datalinks (i.e. connects of different speeds). For example if a large packet comes from one interfaces and must be sent down another interfaces which olny accepts smaller packet sizes. The packet must be **fragmented** in order to fit in onto the datalink. Fragmentation takes place if necessary as long as *Don't Fragment* is not set. Thats a flag on the packet which says "I'd rather you drop me than split me up".

Address Management: Macro
=========================

*Internet Assigned Numbers Authority (IANA)* Co-ordinate number spaces

They delegate *netblocks* or *Regional Internet Registries (RIRs)*.

If you want a massive bunch of addresses you must approach your local registry and justify why you need them.

Address Management: Micro
=========================

Used to also be very manual.

Dynamic Host Configuration Protocol (DHCP)
------------------------------------------

Host broadcasts "can I have an address?" and a DHCP server responds says "sure, here's your IP address"

Internet Control Message Protocol (ICMP)
========================================

*ICMP: RFC 792* uses IP messages

Most common operations:
    * ECHO REQUEST/RESPONSE - ping
    * UNREACHABLE - host, network, gateway
    * TIME EXCEEDED - TTL was decremented to zero

Used to implement *traceroute*. This uses multiple packets sent to the same host with increment levels of TTL values (from 1 to infinity).
An ICMP packed with a TIME EXCEEDED would be sent back to the sending device. This ICMP packet contains information about the route which sent it and thus we can build a list of all the routers which returned ICMP packets.

Evolution
=========

Multicast
---------

* *unicast* (1:1)
* *broadcast* (1:all)

IP natively supports *multicast*. Its efficient (compared to older implementations) since the route itself replicates the packet.

Although that makes everything more complex. Since now you need to manage *group membership* and routing between these groups.

For example:
    * IGMP controls local group memebership
    * PIM, MOSPF handles routing between local groups
    * MBGP

Mobile
------

*RFC 3344* supports mobility, meaning you can change your IP address but still receive packets correctly.

Assigns a **Care-of-Address** in addition to a home address.

IPv6
----

In transition since 1998. Uses a larger address space of 128 bits (as apposed to 32 bits).

There would be no need for NAT, since it was developed as a reaction to IPv4 addresses running out.

Benefits:
    * Integrated security, pack-ported as IPSec
    * Various auto-configuration mechanisms
    * Mobility support - avoids *triangular routing*
    * Jumbo ...

Alternatives
============

Packet systems:
    CLNP, CLNS - still used a little

Circuit Switching:
    actually a real copper circuit (like old telephones)

Statistical multiplexing with circuits:
    Virtual circuits (ATM)
    Flow switching (ipsilon)
